{"version":3,"sources":["utils/apiClient.js","hooks/asyncAction.js","containers/auth/index.js"],"names":["checkStatus","response","status","parseJSON","json","then","Promise","reject","a","headers","get","text","ApiClient","path","options","url","process","formatUrl","fetchOptions","type","key","body","FormData","data","hasOwnProperty","append","JSON","stringify","user","parse","window","localStorage","getItem","token","Authorization","fetch","dataFetchReducer","state","action","isLoading","error","payload","useFetch","useReducer","dispatch","res","onSuccess","console","log","onError","Title","Typography","layout","wrapperCol","span","Login","doFetch","useCache","setLocalStorage","history","useHistory","onFinish","values","method","useEffect","push","className","level","name","onFinishFailed","errorInfo","Item","rules","required","message","placeholder","Password","size","htmlType","loading"],"mappings":"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","file":"static/js/10.e29ec466.chunk.js","sourcesContent":["function formatUrl(path) {\n  const adjustedPath = path[0] !== '/' ? `/${path}` : path;\n  return process.env.REACT_APP_BASE_URL + adjustedPath;\n  // return adjustedPath;\n}\n\nfunction checkStatus(response) {\n  if (response.status >= 200 && response.status < 300) {\n    return parseJSON(response);\n  }\n  return response.json().then((json) => Promise.reject(json));\n}\n\nasync function parseJSON(response) {\n  if (response && response.headers) {\n    if (response.headers.get('Content-Type') === 'application/json') {\n      return await response.json();\n    }\n    if (response.headers.get('Content-Type') === 'text/plain;charset=UTF-8') {\n      return await response.text();\n    }\n  }\n  return response;\n}\n\nfunction ApiClient(path, options) {\n  const url = formatUrl(path);\n  const fetchOptions = options;\n  fetchOptions.headers = fetchOptions.headers || {};\n\n  if (fetchOptions.type === 'formdata') {\n    fetchOptions.body = new FormData();\n\n    for (let key in options.data) {\n      if (\n        typeof key === 'string' &&\n        options.data.hasOwnProperty(key) &&\n        typeof options.data[key] !== 'undefined'\n      ) {\n        fetchOptions.body.append(key, options.data[key]);\n      }\n    }\n  } else {\n    fetchOptions.body = JSON.stringify(options.data);\n    fetchOptions.headers['Content-Type'] = 'application/json';\n    fetchOptions.headers['Accept'] = 'application/json';\n  }\n\n  const user = JSON.parse(window.localStorage.getItem('user'));\n  if (user && user.token) {\n    fetchOptions.headers.Authorization = `Bearer ${user.token}`;\n  }\n\n  return fetch(url, { ...fetchOptions })\n    .then(checkStatus)\n    .then(parseJSON);\n}\nexport default ApiClient;\n","import { useReducer } from 'react';\nimport ApiClient from '../utils/apiClient';\n\nconst dataFetchReducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_INIT':\n      return { ...state, isLoading: true, error: null, response: null };\n    case 'FETCH_SUCCESS':\n      return {\n        ...state,\n        isLoading: false,\n        error: null,\n        response: action.payload\n      };\n    case 'FETCH_FAILURE':\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload,\n        response: null\n      };\n    default:\n      return state;\n  }\n};\n\nfunction useFetch(action) {\n  const [state, dispatch] = useReducer(dataFetchReducer, {\n    isLoading: false,\n    error: null,\n    response: null\n  });\n\n  async function performAction(options) {\n    try {\n      dispatch({ type: 'FETCH_INIT' });\n\n      const res = await ApiClient(options.url, options);\n\n      action && action.onSuccess && action.onSuccess(res);\n      dispatch({ type: 'FETCH_SUCCESS', payload: res });\n    } catch (e) {\n      console.log('here', e);\n      // TODO: handle errors\n      action && action.onError && action.onError(e);\n      dispatch({ type: 'FETCH_FAILURE', payload: e });\n    }\n  }\n\n  return [state, performAction];\n}\nexport default useFetch;\n","import React, { useEffect } from 'react';\nimport useFetch from '../../hooks/asyncAction';\nimport useCache from '../../hooks/cacheData';\nimport { useHistory } from 'react-router-dom';\nimport { Form, Input, Button, Space, Row, Col, Typography } from 'antd';\nimport './auth.scss';\n\nconst { Title } = Typography;\nconst layout = {\n  wrapperCol: { span: 24 },\n};\n\nfunction Login() {\n  const [{ response, isLoading, error }, doFetch] = useFetch();\n  const [setLocalStorage] = useCache();\n  let history = useHistory();\n\n  const onFinish = async (values) => {\n    await doFetch({\n      url: 'login',\n      method: 'POST',\n      data: values,\n    });\n  };\n\n  const onFinishFailed = (errorInfo) => {\n    console.log('Failed:', errorInfo);\n  };\n\n  useEffect(() => {\n    if (response) {\n      setLocalStorage('user', response);\n      history.push('./dashboard');\n    }\n  }, [response]);\n\n  useEffect(() => {\n    console.log(error);\n  }, [error]);\n\n  return (\n    <div className='auth-container'>\n      <Row>\n        <Col span={24}>\n          <Title level={2}>Login</Title>\n        </Col>\n        <Col span={24} className='login-form'>\n          <Form\n            {...layout}\n            name='basic'\n            onFinish={onFinish}\n            onFinishFailed={onFinishFailed}\n          >\n            <Form.Item\n              name='username'\n              rules={[\n                { required: true, message: 'Please input your username!' },\n              ]}\n            >\n              <Input placeholder='Username' />\n            </Form.Item>\n\n            <Form.Item\n              name='password'\n              rules={[\n                { required: true, message: 'Please input your password!' },\n              ]}\n            >\n              <Input.Password placeholder='Password' />\n            </Form.Item>\n\n            <Form.Item>\n              <Space size='middle'>\n                <Button type='primary' htmlType='submit' loading={isLoading}>\n                  Log in\n                </Button>\n              </Space>\n            </Form.Item>\n          </Form>\n        </Col>\n      </Row>\n    </div>\n  );\n}\nexport default Login;\n"],"sourceRoot":""}